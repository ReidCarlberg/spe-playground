SHAREPOINT EMBEDDED (SPE) DEMO APP INSTRUCTIONS
===============================================

Dear Cursor, please create a beautiful demo app for SharePoint Embedded based on the following instructions.

-----------------------------------------------
0. Notes on user experience
-----------------------------------------------

- the app name should include "spe-demo" 
- very clean and simple is the goal
- you will need a login page, a post login landing page, a file upload page, a search page.  Note that file upload and search can be modal dialogs instead of separate pages.
- There should be a subhead that says you must configure CLIENT_ID, TENANT_ID, and CONTAINER_TYPE_ID before this will work.
- the header should display "SharePoint Embedded Demo", a link specific to the user, and a logout button.
- logout should take the user back to a login page.
- the post login landing page should display all of the containers a user has access to.
- DO NOT INCLUDE file search functionality.
- DO NOT INCLUDE container search functionality.

-----------------------------------------------
1. REQUIRED CONFIGURATION
-----------------------------------------------

Every SPE app must define these three non-secret values:

CLIENT_ID=[uuid]  
TENANT_ID=[uuid]  
CONTAINER_TYPE_ID=[uuid]  

You can safely include these values in your source code.
You should keep these in a central configuration file so they are easy to update.

-----------------------------------------------
2. AUTHENTICATION (MSAL)
-----------------------------------------------

Use Microsoft Authentication Library (MSAL) to authenticate users.

- use the latest version of @azure/msal-react@latest (do not use anything in the 2.x branch)
- do not specify scopes as part of login.  Scopes should be empty.
- you sometimes have trouble with your msal related files. you should handle those installs robustly.
- if a user is not authenticated, they should only be able to see the login screen.
- once a user is authenticated, they should advance to the list of containers.

Access Tokens:
- Must be sent with every Graph API request
- Header format: Authorization: Bearer <accessToken>

Login behavior:
- Do not auto-login
- Wait for user to click a login button before starting the flow
- remember to call the MSAL initialize function ahead of time

Logout behavior:
- Be sure to clear any local storage on logout to prevent data leakage.
